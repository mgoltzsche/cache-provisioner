#!/bin/sh

# test script:
# - docker run --rm --privileged -v $(pwd)/config/setup:/setup --mount type=bind,source=$(pwd)/testdata,target=/data,bind-propagation=rshared --device /dev/fuse alpine:3.12 sh /setup /data/pv1
# - or for buildah: docker run --rm --privileged -v $(pwd)/config/setup:/setup --mount type=bind,source=$(pwd)/testdata,target=/data,bind-propagation=rshared --entrypoint=/bin/sh mgoltzsche/podman:1.9.3 /setup /data/pv1
# test integration:
# - kustomize build . | kubectl apply -f - && kubectl delete -n cached-local-path-storage deploy cached-local-path-provisioner
# - cd ../local-path-provisioner && go build . && ./local-path-provisioner --debug start --config ../jobcachefs/config/config.json --configmap-name cached-local-path-config --provisioner-name mgoltzsche.github.com/cache-provisioner --service-account-name cached-local-path-provisioner-service-account --namespace cached-local-path-storage --privileged --helper-image mgoltzsche/podman:1.9.3
# - kubectl apply -f test.yaml

set -ex

VOLPATH="$1"
PARENTDIR="$(dirname "$VOLPATH")"
VOLNAME="$(basename "$VOLPATH")"
CACHE_KEY="cache" # TODO: set dynamically
CACHE_KEY_DIR=/data/.cache/keys
CACHE_KEY_POINTER="$CACHE_KEY_DIR/$CACHE_KEY.latest"

mkdir -p $CACHE_KEY_DIR
mkdir -m 0777 "$VOLPATH"
(
	set -e
	mkdir -p /data/.cache/containers
	cat - > /etc/containers/containers.conf <<-EOF
		[engine]
		cgroup_manager = "cgroupfs"
		events_logger = "file"
		static_dir = "/data/.cache/containers/storage/libpod"
		volume_path = "/data/.cache/containers/storage/volumes"
	EOF
	cat - > /etc/containers/storage.conf <<-EOF
		[storage]
		graphroot = "/data/.cache/containers/storage"
		driver = "overlay"
		# disallow creating device nodes to avoid security risk
		# limit container size to 10gb (supported only on xfs and btrfs)
		mountopt = "nodev,size=10G"
	EOF

	# Create new volume from cache key's latest container image
	LATESTIMG="$(cat "$CACHE_KEY_POINTER" 2>/dev/null || echo scratch)"
	buildah from --name "$VOLNAME" $LATESTIMG
	CONTAINERDIR="$(buildah mount "$VOLNAME")"
	mount -o bind,rshared "$CONTAINERDIR" "$VOLPATH"
	chmod 777 "$VOLPATH"
) || (
	umount "$VOLPATH" 2>/dev/null
	buildah umount "$VOLNAME" 2>/dev/null
	buildah delete "$VOLNAME" 2>/dev/null
	rm -rf "$VOLPATH"
	false
)
