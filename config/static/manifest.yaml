apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  labels:
    app: cache-provisioner
  name: caches.cache-provisioner.mgoltzsche.github.com
spec:
  group: cache-provisioner.mgoltzsche.github.com
  names:
    kind: Cache
    listKind: CacheList
    plural: caches
    singular: cache
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cache is the Schema for the caches API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CacheSpec defines the desired state of Cache
            properties:
              readOnly:
                description: BaseCacheName string `json:"baseCacheName,omitempty"`
                type: boolean
            type: object
          status:
            description: CacheStatus defines the observed state of Cache
            properties:
              cacheGeneration:
                format: int64
                type: integer
              image:
                type: string
              lastImageID:
                type: string
              lastUsed:
                format: date-time
                type: string
              lastWritten:
                format: date-time
                type: string
              nodes:
                description: LastWrittenByPersistentVolumeClaim string       `json:"lastWrittenByPersistentVolumeClaim,omitempty"`
                items:
                  description: NodeStatus defines the observed state of a cache on
                    a node
                  properties:
                    cacheGeneration:
                      format: int64
                      type: integer
                    lastError:
                      properties:
                        cacheGeneration:
                          format: int64
                          type: integer
                        error:
                          type: string
                        happened:
                          format: date-time
                          type: string
                        volumeName:
                          type: string
                      required:
                      - error
                      - happened
                      - volumeName
                      type: object
                    lastImageID:
                      type: string
                    lastUsed:
                      format: date-time
                      type: string
                    name:
                      type: string
                    volumes:
                      items:
                        description: VolumeStatus defines the observed state of a
                          volume or rather cache mount/umount/commit lifecycle
                        properties:
                          cacheGeneration:
                            format: int64
                            type: integer
                          commitStartTime:
                            format: date-time
                            type: string
                          committable:
                            type: boolean
                          created:
                            format: date-time
                            type: string
                          name:
                            type: string
                        required:
                        - cacheGeneration
                        - created
                        - name
                        type: object
                      type: array
                  required:
                  - lastUsed
                  - name
                  type: object
                type: array
              phase:
                type: string
              used:
                format: int64
                type: integer
            required:
            - used
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache-storage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache-local-path-provisioner-service-account
  namespace: cache-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache-local-path-provisioner-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - persistentvolumeclaims
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - persistentvolumes
  - pods
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache-local-path-provisioner-bind
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cache-local-path-provisioner-role
subjects:
- kind: ServiceAccount
  name: cache-local-path-provisioner-service-account
  namespace: cache-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache-local-path-provisioner
  namespace: cache-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache-provisioner
      app.kubernetes.io/component: cache-provisioner
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cache-provisioner
        app.kubernetes.io/component: cache-provisioner
    spec:
      containers:
      - command:
        - local-path-provisioner
        - --debug
        - start
        - --config
        - /etc/config/config.json
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIGMAP_NAME
          value: cache-local-path-config
        - name: SERVICE_ACCOUNT_NAME
          value: cache-manager
        - name: PROVISIONER_NAME
          value: mgoltzsche.github.com/cache-provisioner
        - name: PVC_ANNOTATION
          value: cache-provisioner.mgoltzsche.github.com
        - name: PVC_ANNOTATION_REQUIRED
          value: cache-provisioner.mgoltzsche.github.com/cache-name
        # Using patched version for now until PR is merged: https://github.com/rancher/local-path-provisioner/pull/166
        image: mgoltzsche/local-path-provisioner:0.0.19-helper-pod-patch
        imagePullPolicy: IfNotPresent
        name: local-path-provisioner
        volumeMounts:
        - mountPath: /etc/config/
          name: config-volume
      serviceAccountName: cache-local-path-provisioner-service-account
      volumes:
      - configMap:
          name: cache-local-path-config
        name: config-volume
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache
provisioner: mgoltzsche.github.com/cache-provisioner
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
data:
  config.json: |
    {
      "nodePathMap": [
        {
          "node": "DEFAULT_PATH_FOR_NON_LISTED_NODES",
          "paths": [
            "/data/cache-provisioner"
          ]
        },
        {
          "node": "minikube",
          "paths": [
            "/data/cache-provisioner"
          ]
        },
        {
          "node": "kind-control-plane",
          "paths": [
            "/var/opt/cache-provisioner"
          ]
        }
      ]
    }
  helper-pod.yaml: |
    apiVersion: v1
    kind: Pod
    metadata:
      name: helper-pod
    spec:
      containers:
      - name: helper
        image: mgoltzsche/kube-cache:0.0.1
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          hostPID: true
        env:
        - name: KUBE_CACHE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: data
          mountPropagation: Bidirectional
  setup: |-
    set -eux
    export KUBE_CACHE_ENABLE_K8S_SYNC=true
    export KUBE_CACHE_STORAGE_ROOT="`dirname "$VOL_DIR"`/.cache"
    export KUBE_CACHE_NAME="${PVC_ANNOTATION_CACHE_NAME:-`echo "$PVC_NAME" | sed -E 's/^(.+)-[^-]+$/\1/'`}"
    export KUBE_CACHE_NAMESPACE="$PVC_NAMESPACE"
    export KUBE_CACHE_CONTAINER_NAME="`basename "$VOL_DIR"`"
    kube-cache --debug mount "$VOL_DIR" --mode 0777
  teardown: |-
    set -eux
    export KUBE_CACHE_ENABLE_K8S_SYNC=true
    export KUBE_CACHE_STORAGE_ROOT="`dirname "$VOL_DIR"`/.cache"
    export KUBE_CACHE_NAME="${PVC_ANNOTATION_CACHE_NAME:-`echo "$PVC_NAME" | sed -E 's/^(.+)-[^-]+$/\1/'`}"
    export KUBE_CACHE_NAMESPACE="$PVC_NAMESPACE"
    export KUBE_CACHE_CONTAINER_NAME="`basename "$VOL_DIR"`"
    kube-cache --debug umount "$VOL_DIR" --commit
kind: ConfigMap
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache-local-path-config
  namespace: cache-storage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-provisioner
  name: cache-manager
  namespace: cache-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app: cache-provisioner
  name: manager-role
rules:
- apiGroups:
  - cache-provisioner.mgoltzsche.github.com
  resources:
  - caches
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cache-provisioner.mgoltzsche.github.com
  resources:
  - caches/finalizers
  verbs:
  - update
- apiGroups:
  - cache-provisioner.mgoltzsche.github.com
  resources:
  - caches/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: cache-provisioner
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: cache-manager
  namespace: cache-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: cache-provisioner
  name: leader-election-role
  namespace: cache-storage
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: cache-provisioner
  name: leader-election-rolebinding
  namespace: cache-storage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: cache-storage
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-pvc-remover
  name: cache-pvc-remover-controller-manager
  namespace: cache-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-pvc-remover
  name: cache-pvc-remover-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaim
  verbs:
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-pvc-remover
  name: cache-pvc-remover-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cache-pvc-remover-manager-role
subjects:
- kind: ServiceAccount
  name: cache-pvc-remover-controller-manager
  namespace: cache-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-pvc-remover
  name: cache-pvc-remover-leader-election-role
  namespace: cache-storage
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-pvc-remover
  name: cache-pvc-remover-leader-election-rolebinding
  namespace: cache-storage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cache-pvc-remover-leader-election-role
subjects:
- kind: ServiceAccount
  name: cache-pvc-remover-controller-manager
  namespace: cache-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-pvc-remover
    control-plane: controller-manager
  name: cache-pvc-remover-controller-manager
  namespace: cache-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache-provisioner
      app.kubernetes.io/component: cache-pvc-remover
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app: cache-provisioner
        app.kubernetes.io/component: cache-pvc-remover
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        - --storage-class=cache
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: ""
        image: mgoltzsche/pvc-remover:0.1.1
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      serviceAccountName: cache-pvc-remover-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-manager
    control-plane: controller-manager
  name: cache-controller-manager
  namespace: cache-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cache-provisioner
      app.kubernetes.io/component: cache-manager
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app: cache-provisioner
        app.kubernetes.io/component: cache-manager
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --config=controller_manager_config.yaml
        command:
        - /manager
        image: mgoltzsche/cache-manager:0.0.1-local
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
      securityContext:
        runAsUser: 65532
      serviceAccountName: cache-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: manager-config
        name: manager-config
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    ---
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    leaderElection:
      leaderElect: true
      resourceName: cache-operator.mgoltzsche.github.com
    metadata:
      annotations:
        config.kubernetes.io/index: '0'
        config.kubernetes.io/path: 'manager/controller_manager_config.yaml'
        config.k8s.io/id: '11'
kind: ConfigMap
metadata:
  labels:
    app: cache-provisioner
    app.kubernetes.io/component: cache-manager
  name: manager-config
  namespace: cache-storage
